/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package FormularioCliente;

import Cliente.Cliente;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author josep
 */
public class FormularioCliente extends javax.swing.JFrame {

    ArrayList Agenda = new ArrayList();
    ArrayList DireccionesAdd = new ArrayList();

    /**
     * Creates new form FormularioCliente
     */
    public FormularioCliente() {
        initComponents();
        ModeloTB();
        CargarAgenda();
    }

    public void Limpiar() {
        txtNombre.setText("");
        txtApellido.setText("");
        txtId.setText("");
        txtDirecciones.setText("");

    }

    public void Llenar(String Nombre, String Apellido, String Id, String Direcciones) {
        txtNombre.setText(Nombre);
        txtApellido.setText(Apellido);
        txtId.setText(Id);
        txtDirecciones.setText(Direcciones);
    }

    public void CargarAgenda() {
        Object Ob[] = null;

        Limpiar();
        for (int i = 0; i < Agenda.size(); i++) {
            Cliente Cli = (Cliente) Agenda.get(i);
            TB.addRow(Ob);
            TB.setValueAt(Cli.getId(), i, 0);
            TB.setValueAt(Cli.getNombre(), i, 1);
            TB.setValueAt(Cli.getApellido(), i, 2);
            TB.setValueAt(Cli.getDirecciones(), i, 3);
        }
    }

    public void BorrarLimpiarTabla() {
        int filas = tablaClientes.getRowCount();

        for (int i = filas - 1; i >= 0; i--) {
            TB.removeRow(i);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtId = new javax.swing.JTextField();
        txtNombre = new javax.swing.JTextField();
        txtApellido = new javax.swing.JTextField();
        txtDirecciones = new javax.swing.JTextField();
        btnGuadarCliente = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaClientes = new javax.swing.JTable();
        btnElimininar = new javax.swing.JButton();
        btnBorrarTodo = new javax.swing.JButton();
        btnEditar = new javax.swing.JButton();
        btnAgregarDirecciones = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Nombre");

        jLabel2.setText("Apellido");

        jLabel3.setText("Direcciones");

        jLabel4.setText("Id");

        txtNombre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNombreActionPerformed(evt);
            }
        });

        btnGuadarCliente.setText("Agregar Cliente");
        btnGuadarCliente.setActionCommand("Agregar Cliente");
        btnGuadarCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuadarClienteActionPerformed(evt);
            }
        });

        tablaClientes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        tablaClientes.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablaClientesMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tablaClientes);

        btnElimininar.setText("Eliminar");
        btnElimininar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnElimininarActionPerformed(evt);
            }
        });

        btnBorrarTodo.setText("Limpiar Agenda");
        btnBorrarTodo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBorrarTodoActionPerformed(evt);
            }
        });

        btnEditar.setText("Editar Selecion");
        btnEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarActionPerformed(evt);
            }
        });

        btnAgregarDirecciones.setText("AgregarDirecciones");
        btnAgregarDirecciones.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarDireccionesActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtApellido, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtId, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(txtDirecciones, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnAgregarDirecciones))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(13, 13, 13)
                        .addComponent(btnGuadarCliente)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnElimininar, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(12, 12, 12)
                        .addComponent(btnEditar, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 26, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 530, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnBorrarTodo)
                .addGap(146, 146, 146))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(47, Short.MAX_VALUE)
                .addComponent(btnBorrarTodo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 333, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12))
            .addGroup(layout.createSequentialGroup()
                .addGap(56, 56, 56)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtApellido, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtDirecciones, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAgregarDirecciones))
                .addGap(56, 56, 56)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnGuadarCliente)
                    .addComponent(btnElimininar)
                    .addComponent(btnEditar))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtNombreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNombreActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNombreActionPerformed

    private void btnGuadarClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuadarClienteActionPerformed
        String Nombre, Apellido, Id;
        ArrayList<String> Direccion = new <String>ArrayList();

        Nombre = txtNombre.getText();
        Apellido = txtApellido.getText();
        Id = txtId.getText();
        Direccion.add(txtDirecciones.getText());

        if (this.DireccionesAdd.size() > 0) {
            Direccion.addAll(this.DireccionesAdd);
        }

        if (txtNombre.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Por savor ingrese el Nombre");
            return;
        }

        if (txtApellido.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Por savor ingrese el Apellido");
            return;
        }
        if (txtId.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Por savor ingrese un Id");
            return;
        }
        if (txtDirecciones.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Por savor ingrese una Direccion");
            return;
        }

        Cliente cliente = new Cliente(Id, Nombre, Apellido, Direccion);

        Agenda.add(cliente);
        Limpiar();
        CargarAgenda();
    }//GEN-LAST:event_btnGuadarClienteActionPerformed

    private void btnElimininarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnElimininarActionPerformed
        int fila = tablaClientes.getSelectedRow();
        if (fila > 0) {
            TB.removeRow(fila);
            JOptionPane.showMessageDialog(null, "Se Elimini el Cliente");
        } else {
            JOptionPane.showMessageDialog(null, "Selecione el cliente que desea borrar");
        }
    }//GEN-LAST:event_btnElimininarActionPerformed

    private void btnBorrarTodoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBorrarTodoActionPerformed
        int filas = tablaClientes.getRowCount();

        for (int i = filas - 1; i >= 0; i--) {
            TB.removeRow(i);
        }
    }//GEN-LAST:event_btnBorrarTodoActionPerformed

    private void btnEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarActionPerformed

        if (tablaClientes.getSelectedRowCount() != 1) {
            return;
        }

        String Nombre, Apellido, Id;
        ArrayList<String> Direccion = new <String>ArrayList();

        Nombre = txtNombre.getText();
        Apellido = txtApellido.getText();
        Id = txtId.getText();
        Direccion.add(txtDirecciones.getText());

        Cliente cliente = new Cliente(Id, Nombre, Apellido, Direccion);
        int fila = tablaClientes.getSelectedRow();

        tablaClientes.setValueAt(cliente.getId(), fila, 0);
        tablaClientes.setValueAt(cliente.getNombre(), fila, 1);
        tablaClientes.setValueAt(cliente.getApellido(), fila, 2);
        tablaClientes.setValueAt(cliente.getDirecciones(), fila, 3);
        CargarAgenda();
    }//GEN-LAST:event_btnEditarActionPerformed

    private void tablaClientesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablaClientesMouseClicked

        int fila = tablaClientes.getSelectedRow();

        String Nombre, Apellido, Id;
        ArrayList Direccion = new ArrayList();

        Nombre = (String) TB.getValueAt(fila, 0);
        Apellido = (String) TB.getValueAt(fila, 1);
        Id = (String) TB.getValueAt(fila, 2);
        Direccion = (ArrayList) TB.getValueAt(fila, 3);

        Llenar(Nombre, Apellido, Id, Direccion.toString());

    }//GEN-LAST:event_tablaClientesMouseClicked

    private void btnAgregarDireccionesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarDireccionesActionPerformed
        this.DireccionesAdd.add(txtDirecciones.getText());
        txtDirecciones.setText("");
        JOptionPane.showMessageDialog(null, "Se Agrrego una Direccion al Cliente");
    }//GEN-LAST:event_btnAgregarDireccionesActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FormularioCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FormularioCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FormularioCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FormularioCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FormularioCliente().setVisible(true);
            }
        });
    }

    DefaultTableModel TB;

    private void ModeloTB() {
        try {
            TB = (new DefaultTableModel(null, new String[]{"Id", "Nombre", "Apellido", "Direcciones"}) {
            });

            tablaClientes.setModel(TB);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Eror");
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAgregarDirecciones;
    private javax.swing.JButton btnBorrarTodo;
    private javax.swing.JButton btnEditar;
    private javax.swing.JButton btnElimininar;
    private javax.swing.JButton btnGuadarCliente;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tablaClientes;
    private javax.swing.JTextField txtApellido;
    private javax.swing.JTextField txtDirecciones;
    private javax.swing.JTextField txtId;
    private javax.swing.JTextField txtNombre;
    // End of variables declaration//GEN-END:variables
}
